{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kayradurmus/Downloads/pokedex/src/app/pokemon/%5Bpokemon_id%5D/pokemon.tsx"],"sourcesContent":["import Pokemon from \"@/model/pokemon\";\nimport { Row, Col, Container, Image, ProgressBar, Card, ListGroup, Badge } from 'react-bootstrap';\n\n\ntype Props ={\n   pokemon: Pokemon;\n}\n\n\nexport default function PokemonComponent(props : Props) {\n   const {pokemon} = props;\n\n    const getFamilyTag = (pokemon: Pokemon, evolution: string) => {\n        if (evolution === pokemon.devolution) {\n          return <Badge bg=\"danger\">Devolution</Badge>\n        }\n        if (evolution === pokemon.pokemonName) {\n          return <Badge bg=\"primary\">Current</Badge>\n        }\n        if (evolution === pokemon.evolution) {\n          return <Badge bg=\"success\">Evolution</Badge>\n        }\n        return <></>\n      }\n\n\n   return (\n       <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\"><h1>{pokemon.pokemonName}</h1></Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Image src={pokemon.mainImage} thumbnail /></Col>\n                <Col>\n                    <Row className=\"m-2\">\n                        <Row>\n                            <Col xs={3}>Speed:</Col>\n                            <Col><ProgressBar variant=\"info\" now={pokemon.speed} label={pokemon.speed} /></Col>\n                        </Row>\n                        <Row>\n                            <Col xs={3}>Health points: </Col>\n                            <Col><ProgressBar variant=\"danger\" now={pokemon.healthPoints} label={pokemon.healthPoints} /></Col>\n                        </Row>\n                        <Row>\n                            <Col xs={3}>Attack: </Col>\n                            <Col><ProgressBar variant=\"warning\" now={pokemon.attack} label={pokemon.attack} /></Col>\n                        </Row>\n                        <Row>\n                            <Col xs={3}>Defense: </Col>\n                            <Col><ProgressBar variant=\"success\" now={pokemon.defense} label={pokemon.defense} /></Col>\n                        </Row>\n                    </Row>\n                    <Row className=\"m-2\">\n                        <Card className=\"p-0\">\n                            <Card.Header>Pokemon type</Card.Header>\n                            <ListGroup variant=\"flush\">\n                                {pokemon.pokemonType.map(type => <ListGroup.Item key={pokemon.pokemonNumber}>{type}</ListGroup.Item>)}\n                            </ListGroup>\n                        </Card>\n                    </Row>\n                    <Row className=\"m-2\">\n                        <Card className=\"p-0\">\n                            <Card.Header>Evaluation family</Card.Header>\n                            <ListGroup variant=\"flush\">\n                                {pokemon.evolutionFamily.map(evolution => <ListGroup.Item key={pokemon.pokemonNumber}>{evolution} {getFamilyTag(pokemon, evolution)}</ListGroup.Item>)}\n                            </ListGroup>\n                        </Card>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n   );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/kayradurmus/Downloads/pokedex/src/components/pokeNavBarComp.tsx"],"sourcesContent":["\"use client\";\n\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Container } from 'react-bootstrap';\n\n\nexport default function PokeNavBarComp() {\n   return (\n       <>\n           <Navbar bg=\"dark\" data-bs-theme=\"dark\">\n               <Container>\n                   <Navbar.Brand href='/'>Pokedex</Navbar.Brand>\n                   <Nav className=\"me-auto\">\n                       <Nav.Link href='/'>Home</Nav.Link>\n                   </Nav>\n               </Container>\n           </Navbar>\n       </>\n   );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAQe,SAAS;IACrB,qBACI;kBACI,cAAA,8OAAC,mJAAA,CAAA,UAAM;YAAC,IAAG;YAAO,iBAAc;sBAC5B,cAAA,8OAAC,8LAAA,CAAA,YAAS;;kCACN,8OAAC,mJAAA,CAAA,UAAM,CAAC,KAAK;wBAAC,MAAK;kCAAI;;;;;;kCACvB,8OAAC,gJAAA,CAAA,UAAG;wBAAC,WAAU;kCACX,cAAA,8OAAC,gJAAA,CAAA,UAAG,CAAC,IAAI;4BAAC,MAAK;sCAAI;;;;;;;;;;;;;;;;;;;;;;;AAM1C","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///Users/kayradurmus/Downloads/pokedex/src/app/pokemon/%5Bpokemon_id%5D/page.tsx"],"sourcesContent":["// Instructs React (Next.js) to run this code on the client side.\n// Next.js by default would render this content on the server side where the application is hosted.\n'use client'\nimport Pokemon from '@/model/pokemon';\nimport { useEffect, useState } from 'react';\nimport { Container, Image, Spinner, Row } from 'react-bootstrap';\nimport PokemonComponent from './pokemon';\nimport PokeNavBar from '@/components/pokeNavBarComp';\nimport React from 'react';\n\n\n// This type is used to get the pokemon id from the url path\ntype Params = {\n  params: Promise<{ pokemon_id: string }>\n}\n\n\n\n\n// Next.js passes the url parts which are defined between square brackets []\n// to the function which renders the page.\n\n\n// In our case http://localhost:3000/pokemon/2 is the URL.\n// Where the 2 is the [pokemon_id] and passed as a parameter.\nexport default function PokemonPage({ params }: Params) {\n  const {pokemon_id} = React.use(params);\n   //pokemon - A constant state variable which stores the pokemon information and retains the data between renders.\n   //setPokemon - A state setter function to update the variable and trigger React to render the component again.\n   const [pokemon, setPokemon] = useState<Pokemon>();\n   const [isPokemonLoaded, setPokemonLoaded] = useState(false);\n\n\n   useEffect(() => {\n       const fetchData = async () => {\n           const resp = await fetch('/api/pokemon/' + pokemon_id);\n           if (resp.ok) {\n               const pokemon: Pokemon = await resp.json();\n               console.log(pokemon);\n               setPokemon(pokemon);\n           }\n           setPokemonLoaded(true);\n       };\n\n\n       fetchData()\n           // Making sure to log errors on the console\n           .catch(error => {\n               console.error(error);\n               setPokemonLoaded(true);\n           });\n   }, []);\n\n\n   return (\n       <>\n           <PokeNavBar></PokeNavBar>\n           {\n               isPokemonLoaded ?\n                   pokemon ?\n                       <PokemonComponent pokemon={pokemon}></PokemonComponent> :\n                       <Image className='img-fluid mx-auto d-block rounded'\n                           src=\"https://cdn.dribbble.com/users/2805817/screenshots/13206178/media/6bd36939f8a01d4480cb1e08147e20f3.png\" /> :\n                   <Container>\n                       <Row className=\"justify-content-md-center p-2\">\n                           <Spinner className='p-2' animation='border' role='status' />\n                       </Row>\n                       <Row className=\"justify-content-md-center p-2\">\n                           Loading Pok√©mon...\n                       </Row>\n                   </Container>\n           }\n       </>\n   );\n}\n"],"names":[],"mappings":"AAAA,iEAAiE;AACjE,mGAAmG;;;;;AAGnG;AACA;AAAA;AAAA;AAAA;AACA;AACA;AALA;;;;;;;AAuBe,SAAS,YAAY,EAAE,MAAM,EAAU;IACpD,MAAM,EAAC,UAAU,EAAC,GAAG,qMAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IAC9B,gHAAgH;IAChH,8GAA8G;IAC9G,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IACrC,MAAM,CAAC,iBAAiB,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAGrD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,MAAM,OAAO,MAAM,MAAM,kBAAkB;YAC3C,IAAI,KAAK,EAAE,EAAE;gBACT,MAAM,UAAmB,MAAM,KAAK,IAAI;gBACxC,QAAQ,GAAG,CAAC;gBACZ,WAAW;YACf;YACA,iBAAiB;QACrB;QAGA,WACI,2CAA2C;SAC1C,KAAK,CAAC,CAAA;YACH,QAAQ,KAAK,CAAC;YACd,iBAAiB;QACrB;IACR,GAAG,EAAE;IAGL,qBACI;;0BACI,8OAAC,oIAAA,CAAA,UAAU;;;;;YAEP,kBACI,wBACI,8OAAC,mJAAA,CAAA,UAAgB;gBAAC,SAAS;;;;;qCAC3B,8OAAC,sLAAA,CAAA,QAAK;gBAAC,WAAU;gBACb,KAAI;;;;;qCACZ,8OAAC,8LAAA,CAAA,YAAS;;kCACN,8OAAC,kLAAA,CAAA,MAAG;wBAAC,WAAU;kCACX,cAAA,8OAAC,0LAAA,CAAA,UAAO;4BAAC,WAAU;4BAAM,WAAU;4BAAS,MAAK;;;;;;;;;;;kCAErD,8OAAC,kLAAA,CAAA,MAAG;wBAAC,WAAU;kCAAgC;;;;;;;;;;;;;;AAOtE","debugId":null}}]
}